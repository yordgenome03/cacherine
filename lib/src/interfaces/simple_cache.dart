/// **シンプルなキャッシュのインターフェース**
///
/// **非スレッドセーフなキャッシュの基本機能** を定義する抽象クラス。
/// - 単一スレッド環境での使用を想定。
/// - **キーの取得・保存・削除** の基本操作を提供。
abstract class SimpleCache<K, V> {
  /// **キャッシュに格納されているすべてのキーを取得する。**
  ///
  /// **戻り値:** キャッシュに含まれるすべてのキーのリスト。
  Iterable<K> getKeys();

  /// **指定したキーに対応する値を取得する。**
  ///
  /// - **キーが存在しない場合は `null` を返す。**
  ///
  /// **引数:**
  /// - `key`: 取得したいデータのキー。
  ///
  /// **戻り値:** キーに対応する値、または `null`。
  V? get(K key);

  /// **指定したキーと値をキャッシュに保存する。**
  ///
  /// - 既存のキーを設定すると、対応する値を更新する。
  ///
  /// **引数:**
  /// - `key`: 保存するデータのキー。
  /// - `value`: 保存するデータの値。
  void set(K key, V value);

  /// **キャッシュ内のすべてのデータを削除する。**
  void clear();
}
